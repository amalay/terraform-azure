trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

# Define Variables for Environments
variables:
  AzureServiceConnection: AV-Azure-ServiceConnection # Azure Service Connection Name
  
  TFStateResourceGroup: "RG-AVE"
  TFStateStorageAccount: ave
  TFStateStorageAccountContainer: terraformstate
  TFStateKey: aks.terraform.tfstate

  DevEnv: dev
  TestEnv: test

  SSHKeyFileName: "av-tf-aks-ssh-key.pub"


# Stage-1: Terraform Validate Stage
## Step-1: Publish Artifacts to Pipeline (Pipeline artifacts provide a way to share files between stages in a pipeline or between different pipelines. )
## Step-2: Install Latest Terraform (0.13.5) (Ideally not needed if we use default Ubuntu Agents)
## Step-3: Validate Terraform Manifests (terraform init, terraform validate)
stages:
- stage: TerraformValidate
  jobs:
    - job: TerraformValidateJob
      continueOnError: false

      steps:
      - task: PublishPipelineArtifact@1
        displayName: Publish Artifacts
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)'
          artifact: 'terraform'
          publishLocation: 'pipeline'

      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
        displayName: Terraform Install
        inputs:
          terraformVersion: 0.14.3

      - task: TerraformCLI@0
        displayName: 'check terraform version'
        inputs:
          command: version